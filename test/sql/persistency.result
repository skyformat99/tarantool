env = require('test_run')
---
...
test_run = env.new()
---
...
-- create space
box.sql.execute("CREATE TABLE foobar (foo PRIMARY KEY, bar)")
---
...
-- prepare data
box.sql.execute("INSERT INTO foobar VALUES (1, 'foo')")
---
...
box.sql.execute("INSERT INTO foobar VALUES (2, 'bar')")
---
...
box.sql.execute("INSERT INTO foobar VALUES (1000, 'foobar')")
---
...
box.sql.execute("INSERT INTO foobar VALUES (1, 'duplicate')")
---
- error: 'UNIQUE constraint failed: FOOBAR.FOO'
...
-- simple select
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar")
---
- - ['foo', 1, 42, 'awesome']
  - ['bar', 2, 42, 'awesome']
  - ['foobar', 1000, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar LIMIT 2")
---
- - ['foo', 1, 42, 'awesome']
  - ['bar', 2, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo=2")
---
- - ['bar', 2, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo>2")
---
- - ['foobar', 1000, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo>=2")
---
- - ['bar', 2, 42, 'awesome']
  - ['foobar', 1000, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo=10000")
---
- []
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo>10000")
---
- []
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo<2")
---
- - ['foo', 1, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo<2.001")
---
- - ['foo', 1, 42, 'awesome']
  - ['bar', 2, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo<=2")
---
- - ['foo', 1, 42, 'awesome']
  - ['bar', 2, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE foo<100")
---
- - ['foo', 1, 42, 'awesome']
  - ['bar', 2, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar WHERE bar='foo'")
---
- - ['foo', 1, 42, 'awesome']
...
box.sql.execute("SELECT count(*) FROM foobar")
---
- - [3]
...
box.sql.execute("SELECT count(*) FROM foobar WHERE bar='foo'")
---
- - [1]
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar ORDER BY bar")
---
- - ['bar', 2, 42, 'awesome']
  - ['foo', 1, 42, 'awesome']
  - ['foobar', 1000, 42, 'awesome']
...
box.sql.execute("SELECT bar, foo, 42, 'awesome' FROM foobar ORDER BY bar DESC")
---
- - ['foobar', 1000, 42, 'awesome']
  - ['foo', 1, 42, 'awesome']
  - ['bar', 2, 42, 'awesome']
...
-- updates
box.sql.execute("REPLACE INTO foobar VALUES (1, 'cacodaemon')")
---
...
box.sql.execute("SELECT COUNT(*) FROM foobar WHERE foo=1")
---
- - [1]
...
box.sql.execute("SELECT COUNT(*) FROM foobar WHERE bar='cacodaemon'")
---
- - [1]
...
box.sql.execute("DELETE FROM foobar WHERE bar='cacodaemon'")
---
...
box.sql.execute("SELECT COUNT(*) FROM foobar WHERE bar='cacodaemon'")
---
- - [0]
...
-- multi-index
-- create space
box.sql.execute("CREATE TABLE barfoo (bar, foo NUM PRIMARY KEY)")
---
...
box.sql.execute("CREATE UNIQUE INDEX barfoo2 ON barfoo(bar)")
---
...
-- prepare data
box.sql.execute("INSERT INTO barfoo VALUES ('foo', 1)")
---
...
box.sql.execute("INSERT INTO barfoo VALUES ('bar', 2)")
---
...
box.sql.execute("INSERT INTO barfoo VALUES ('foobar', 1000)")
---
...
-- create a trigger
box.sql.execute("CREATE TRIGGER tfoobar AFTER INSERT ON foobar BEGIN INSERT INTO barfoo VALUES ('trigger test', 9999); END")
---
...
box.sql.execute("SELECT * FROM _trigger");
---
- - ['TFOOBAR', !!binary gaNzcWzZaUNSRUFURSBUUklHR0VSIHRmb29iYXIgQUZURVIgSU5TRVJUIE9OIGZvb2JhciBCRUdJTiBJTlNFUlQgSU5UTyBiYXJmb28gVkFMVUVTICgndHJpZ2dlciB0ZXN0JywgOTk5OSk7IEVORA==]
...
-- Many entries
box.sql.execute("CREATE TABLE t1(a,b,c,PRIMARY KEY(b,c));")
---
...
box.sql.execute("WITH RECURSIVE cnt(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM cnt WHERE x<1000) INSERT INTO t1 SELECT x, x%40, x/40 FROM cnt;")
---
...
box.sql.execute("SELECT a FROM t1 ORDER BY b, a LIMIT 10 OFFSET 20;");
---
- - [840]
  - [880]
  - [920]
  - [960]
  - [1000]
  - [1]
  - [41]
  - [81]
  - [121]
  - [161]
...
test_run:cmd('restart server default');
-- prove that trigger survived
box.sql.execute("SELECT * FROM _trigger");
---
- - ['TFOOBAR', !!binary gaNzcWzZaUNSRUFURSBUUklHR0VSIHRmb29iYXIgQUZURVIgSU5TRVJUIE9OIGZvb2JhciBCRUdJTiBJTlNFUlQgSU5UTyBiYXJmb28gVkFMVUVTICgndHJpZ2dlciB0ZXN0JywgOTk5OSk7IEVORA==]
...
-- ... functional
box.sql.execute("INSERT INTO foobar VALUES ('foobar trigger test', 8888)")
---
...
box.sql.execute("SELECT * FROM barfoo WHERE foo = 9999");
---
- - ['trigger test', 9999]
...
-- and still persistent
box.sql.execute("SELECT * FROM _trigger")
---
- - ['TFOOBAR', !!binary gaNzcWzZaUNSRUFURSBUUklHR0VSIHRmb29iYXIgQUZURVIgSU5TRVJUIE9OIGZvb2JhciBCRUdJTiBJTlNFUlQgSU5UTyBiYXJmb28gVkFMVUVTICgndHJpZ2dlciB0ZXN0JywgOTk5OSk7IEVORA==]
...
-- and can be dropped just once
box.sql.execute("DROP TRIGGER tfoobar")
---
...
-- Should error
box.sql.execute("DROP TRIGGER tfoobar")
---
- error: 'no such trigger: TFOOBAR'
...
-- Should be empty
box.sql.execute("SELECT * FROM _trigger")
---
- []
...
-- prove barfoo2 still exists
box.sql.execute("INSERT INTO barfoo VALUES ('xfoo', 1)")
---
- error: 'UNIQUE constraint failed: BARFOO.FOO'
...
box.sql.execute("SELECT * FROM barfoo")
---
- - ['foo', 1]
  - ['bar', 2]
  - ['foobar', 1000]
  - ['trigger test', 9999]
...
box.sql.execute("SELECT * FROM foobar");
---
- - [2, 'bar']
  - [1000, 'foobar']
  - ['foobar trigger test', 8888]
...
box.sql.execute("SELECT a FROM t1 ORDER BY b, a LIMIT 10 OFFSET 20;");
---
- - [840]
  - [880]
  - [920]
  - [960]
  - [1000]
  - [1]
  - [41]
  - [81]
  - [121]
  - [161]
...
-- cleanup
box.sql.execute("DROP TABLE foobar")
---
...
box.sql.execute("DROP TABLE barfoo")
---
...
box.sql.execute("DROP TABLE t1")
---
...
